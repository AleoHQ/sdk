{
  "fileName": "block.d.ts",
  "filePath": "sdk/src/models/block.d.ts",
  "url": "https://github.com/AleoHQ/aleo/sdk/src/models/block.d.ts",
  "summary": "This code defines the structure of a block in the Aleo project, which is a blockchain-based platform. The block structure is essential for maintaining the integrity and security of the blockchain. The code consists of three main types: `Block`, `Header`, and `Metadata`.\n\nThe `Block` type represents a single block in the blockchain and contains the following properties:\n\n- `block_hash`: A unique string representing the hash of the block.\n- `previous_hash`: A string representing the hash of the previous block in the chain.\n- `header`: An object of type `Header` containing additional information about the block.\n- `transactions`: An optional array of `Transaction` objects, representing the transactions included in the block.\n- `signature`: A string representing the digital signature of the block, used for validation purposes.\n\nThe `Header` type contains information about the block and its contents. It has the following properties:\n\n- `previous_state_root`: A string representing the root hash of the previous block's state.\n- `transactions_root`: A string representing the root hash of the transactions included in the block.\n- `metadata`: An object of type `Metadata` containing additional information about the block.\n\nThe `Metadata` type provides further details about the block, such as:\n\n- `network`: A number representing the network ID.\n- `round`: A number representing the round number in the consensus algorithm.\n- `height`: A number representing the height of the block in the blockchain.\n- `coinbase_target`: A number representing the target value for the coinbase transaction (i.e., the reward for mining the block).\n- `proof_target`: A number representing the target value for the proof-of-work algorithm.\n- `timestamp`: A number representing the timestamp of the block creation.\n\nThese types are used throughout the Aleo project to create, validate, and manipulate blocks in the blockchain. For example, when a new block is mined, it will be created as an instance of the `Block` type, with its properties set according to the current state of the blockchain and the transactions it contains. The block's `Header` and `Metadata` will also be populated with the relevant information, ensuring the block is correctly linked to the previous block and contains the necessary data for validation and consensus.",
  "questions": "1. **What is the purpose of the `Block` type?**\n\n   The `Block` type represents a block in the Aleo blockchain, containing properties like block hash, previous hash, header, transactions, and signature.\n\n2. **How are transactions stored in the `Block` type?**\n\n   Transactions are stored as an optional array of `Transaction` objects in the `transactions` property of the `Block` type.\n\n3. **What information is contained in the `Metadata` type?**\n\n   The `Metadata` type contains information about the network, round, height, coinbase target, proof target, and timestamp for a block in the Aleo blockchain."
}
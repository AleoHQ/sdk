{
  "fileName": "resolver.rs",
  "filePath": "rust/src/program/resolver.rs",
  "url": "https://github.com/AleoHQ/aleo/rust/src/program/resolver.rs",
  "summary": "This code defines the `ProgramManager` struct for the Aleo project, which is responsible for managing Aleo programs. The `ProgramManager` is designed to find and load programs and their imports from both the local disk and the Aleo network. It provides methods to find a program, find a program on disk, find a program on the Aleo network, and find a program's imports.\n\nThe `find_program` method first tries to find a program on the local disk using `find_program_on_disk`. If the program is not found on the disk, it then tries to find the program on the Aleo network using `find_program_on_chain`. The `find_program_on_disk` method loads a program from a local program directory, while the `find_program_on_chain` method loads a program from the Aleo network.\n\nThe `find_program_imports` method is used to find a program's imports by first searching on the local disk and then on the Aleo network if not found. It iterates through the program's imports and tries to find each import using the `find_program` method. If an import is not found, it raises an error.\n\nThe code also includes tests to ensure the proper functionality of the `ProgramManager`. These tests cover various scenarios, such as loading programs and imports from the local disk, loading programs and imports from the Aleo network, and handling errors when programs or imports are not found.\n\nExample usage:\n\n```rust\nlet program_manager = ProgramManager::<Testnet3>::new(...);\nlet program_id = ProgramID::<Testnet3>::from_str(\"aleo_test.aleo\").unwrap();\nlet program = program_manager.find_program(&program_id).unwrap();\nlet imports = program_manager.find_program_imports(&program).unwrap();\n```\n\nThis example demonstrates how to create a `ProgramManager`, find a program by its ID, and find the program's imports.",
  "questions": "1. **Question**: What is the purpose of the `ProgramManager` struct and its methods?\n   **Answer**: The `ProgramManager` struct is responsible for managing Aleo programs. It provides methods to find and load programs from disk or the Aleo network, and to find and load program imports.\n\n2. **Question**: How does the `find_program` method work, and what is the order of precedence for finding a program?\n   **Answer**: The `find_program` method first tries to find a program on disk using `find_program_on_disk`. If it fails to find the program on disk, it then tries to find the program on the Aleo network using `find_program_on_chain`.\n\n3. **Question**: How does the `find_program_imports` method work, and how does it handle missing imports?\n   **Answer**: The `find_program_imports` method iterates through the imports of a given program and tries to find each import using the `find_program` method. If it fails to find an import, it returns an error indicating that the import could not be found."
}